!-------------------------------------------------------------------
! Input card for pp -> tttt
!-------------------------------------------------------------------
! Constants, particle masses and widths
!-------------------------------------------------------------------
gfermi 1.166378d-5         ! Fermi constant
zmass 91.1876d0            ! Mass of the Z boson in [GeV]
wmass 80.385d0             ! Mass of the W boson in [GeV]
tmass 172.5d0              ! Mass of the top quark in [GeV]
hmass 125d0                ! Mass of the Higgs boson in [GeV]
zwidth 2.50775d0           ! Width of the Z boson in [GeV]
hwidth 0.00407d0           ! Width of the Higgs boson in [GeV]
!-------------------------------------------------------------------
! Additional parameters for decay modelling
!-------------------------------------------------------------------
wwidth 2.09767d0           ! Width of the W boson in [GeV]
twidth 1.33247d0           ! Width of the top quark in [GeV]
! CKM mixing matrix between first two generations (only relevant for
! top decay)
CKM_Vud  0.974276d0        ! V_{ud}
CKM_Vus  0.225358d0        ! V_{us}
CKM_Vcd  0.225358d0        ! V_{cd}
CKM_Vcs  0.974276d0        ! V_{cs}
! LesHouches masses for momentum reshuffling (only relevant for top
! decay)
lhfm/emass 0.51099891d-3   ! Electron mass in [GeV]
lhfm/mumass 0.1056583668d0 ! Muon mass in [GeV]
lhfm/taumass 1.77684d0     ! Tau mass in [GeV]
lhfm/dmass 0.33d0          ! Down-quark mass in [GeV]
lhfm/umass 0.33d0          ! Up-quark mass in [GeV]
lhfm/smass 0.50d0          ! Strange-quark mass in [GeV]
lhfm/cmass 1.50d0          ! Charm-quark mass in [GeV]
lhfm/bmass 4.80d0          ! Bottom-quark mass in [GeV]
correlations 1             ! if 1, top decays are correlated, otherwise uncorrelated
! top decay mode
topdecaymode -44444         ! 0 stable tops
#                          ! an integer of 5 digits that are either 0, or 2, representing in
#                          ! the order the maximum number of the following particles(antiparticles)
#                          ! in the final state: e  mu tau up charm
#                          ! For example
#                          ! 44444    All decays (up to 4 units of everything)
#                          ! 40000    All W go into l nu (with the appropriate signs)
#                          ! 20011    two top goes into electron (or positron), the other into (any) hadrons,
#                          !          or one top goes into charm, the other into up
#                          ! 00044    Fully hadronic
#                          ! 00004    Fully hadronic with three charms
#                          ! 00031    Fully hadronic with a single charm
#                          ! 00013    Fully hadronic with at least one charm
!-------------------------------------------------------------------
! Partondistribution functions
!-------------------------------------------------------------------
ih1   1                    ! hadron 1 (1 for protons, -1 for antiprotons)
ih2   1                    ! hadron 2 (1 for protons, -1 for antiprotons)
ebeam1 6500d0              ! energy of beam 1
ebeam2 6500d0              ! energy of beam 2
! To be set only if using 'native' pdfs
! ndns1 131                ! pdf set for hadron 1 (mlm numbering)
! ndns2 131                ! pdf set for hadron 2 (mlm numbering)
! To be set only if using LHA pdfs
lhans1  303400              ! pdf set for hadron 1 (LHA numbering)
lhans2  303400              ! pdf set for hadron 2 (LHA numbering)
!-------------------------------------------------------------------
! POWHEG parameters
!-------------------------------------------------------------------
numevts 10000              ! number of events to be generated
use-old-grid    1          ! if 1 use old grid if file pwggrids.dat is present (<> 1 regenerate)
use-old-ubound  1          ! if 1 use norm of upper bounding function stored in pwgubound.dat, if present; <> 1 regenerate
ncall1  100000             ! number of calls for initializing the integration grid
!ncall1rm  100000          ! number of calls for initializing the integration grid for the remnant contribution
itmx1    5                 ! number of iterations for initializing the integration grid
ncall2  100000             ! number of calls for computing the integral and finding upper bound
!ncall2rm  100000          ! number of calls for computing the integral and finding upper bound for the remnant contribution
itmx2    5                 ! number of iterations for computing the integral and finding upper bound
foldcsi   2                ! number of folds on csi integration
foldy     2                ! number of folds on  y  integration
foldphi   2                ! number of folds on phi integration
nubound 10000              ! number of bbarra calls to setup norm of upper bounding function
icsimax  3                 ! <= 100, number of csi subdivision when computing the upper bounds
iymax    3                 ! <= 100, number of y subdivision when computing the upper bounds
xupbound 2d0               ! increase upper bound for radiation generation
testplots  0               ! (default 0, do not) do NLO and PWHG distributions
bornonly   0               ! (default 0) if 1 do Born (xsec) only
LOevents   0               ! (default 0) if 1 only generate born kinematics
storemintupb 1             ! Save stage2 calls for btilde upper bound calculation at stage3
fastbtlbound 1             ! Fast calculation of the btilde upper bounding
compress_upb 1             ! Compress pwg(btl|rmn)upb.dat files on the fly with zlib (does not append .gz to the filename)
compress_lhe 0             ! Compress pwgevents-????.lhe files on the fly with zlib (does not append .gz to the filename)
!-------------------------------------------------------------------
! Other options
!-------------------------------------------------------------------
ewborn 1                   ! (default 1) if 1 includes EW born contributions
novirtual 0      ! (default 0) switch on/off virtual corrections
!-------------------------------------------------------------------
! Renormalization and factorization scales
!-------------------------------------------------------------------
scalechoice 1              ! Choose a predefined scale
                           ! 0 - muR = muF = 2mt (default)
                           ! 1 - muR = muF = HT/4
renscfact 1.0d0            ! muR -> muR*renscfact
facscfact 1.0d0            ! muF -> muF*facscfact
btlscalereal 1             ! Compute scale for real ME and subtraction term on real kinematics
btlscalect   1             ! Compute scale for subtraction term on born kinematics
alphas_from_pdf 1          ! Use the LHAPDF routine for alphaS running instead of the powheg internal routine
                           ! (everywhere, except for in the Sudakov form factor)
!-------------------------------------------------------------------
! Damping parameters
!-------------------------------------------------------------------
withdamp 1                 ! Enable high pT damping
bornzerodamp 1             ! Enable Bornzero damping
dynamic_hdamp 1            ! Enable dynamic h_damp = HT/4
dampscfact 1.0d0           ! h_damp -> h_damp*dampscfact
hbzd  5.0d0                ! Bornzero damping parameter (default = 5.0)
!-------------------------------------------------------------------
! Random seeds
!-------------------------------------------------------------------
iseed    1                 ! Random seed
#manyseeds  1              ! Used to perform multiple runs with different random
#                          ! seeds in the same directory.
#                          ! If set to 1, the program asks for an integer j;
#                          ! The file pwgseeds.dat at line j is read, and the
#                          ! integer at line j is used to initialize the random
#                          ! sequence for the generation of the event.
#                          ! The event file is called pwgevents-'j'.lhe
#xgriditeration 1          ! identifier for grid generation
#parallelstage  1          ! identifier for parallel running stages
!-------------------------------------------------------------------
! Reweighting
!-------------------------------------------------------------------
rwl_format_rwgt 1          ! Format additional event weights correctly
rwl_file '-'               ! If set to '-' read the xml reweighting info from
                           ! this same file. Otherwise, it specifies the xml
                           ! file with weight information
<initrwgt>
<weight id='1'>default</weight>  ! Default weight, necessary when using
                                 ! for_reweighting 1, in order to save the weight
                                 ! including the virtual corrections
<weight id='2' > renscfact=2d0 facscfact=2d0 </weight>     ! part of 7pt scale vars
<weight id='3' > renscfact=0.5d0 facscfact=0.5d0 </weight> ! part of 7pt scale vars
<weight id='4' > renscfact=1d0 facscfact=2d0 </weight>     ! part of 7pt scale vars
<weight id='5' > renscfact=1d0 facscfact=0.5d0 </weight>   ! part of 7pt scale vars
<weight id='6' > renscfact=2d0 facscfact=1d0 </weight>     ! part of 7pt scale vars
<weight id='7' > renscfact=0.5d0 facscfact=1d0 </weight>   ! part of 7pt scale vars
</initrwgt>
rwl_group_events 1000 ! (powheg default 1000) it keeps 1000 events in memory, reprocessing
                      ! them together for reweighting (see README.Compress-And-Weights)

